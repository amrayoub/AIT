$font-size-go-portrait:         60vw;
$font-size-go-landscape:        50vh;
$font-size-stop-portrait:       15vw;
$font-size-stop-landscape:      10vh;
$font-size-interval-portrait:   25vw;
$font-size-interval-landscape:  25vh;
$font-size-time-portrait:       25vw;
$font-size-time-landscape:      25vh;


page-interval-display {
  // its seems, perhaps using a grid in the content area, correct size isnt
  // calculated by ionic or Angular.  so we have 'ion-fixed' being used and
  // removing its margin-top the framework adds to the HTML *element*
  ion-content > div.fixed-content[style^="margin-top"] {
      margin-top: 0px !important;

      [ion-fixed] {
        z-index: inherit;
      }
  }

  .activeGo {
    font-family: selawksb;
    @media screen and (orientation:portrait) { font-size: $font-size-go-portrait; }
    @media screen and (orientation:landscape) { font-size: $font-size-go-landscape; }
    color: appColor( go );
  }

  .activeLoaded {
    @extend .activeGo;
    color: appColor( getready );
  }

  .activeStop {
    @extend .activeGo;
    @media screen and (orientation:portrait) { font-size: $font-size-stop-portrait; }
    @media screen and (orientation:landscape) { font-size: $font-size-stop-landscape; }
    color: appColor( go );
  }

  .activeCompleted {
    @extend .activeGo;
    color: appColor( primary );
  }

  .activeGetReady {
    @extend .activeStop;
    color: appColor( getready );
  }

  .activeCountdown {
    @extend .activeGo;
    color: $display-disabled;
  }

  .restGo {
    font-family: selawksb;
    @media screen and (orientation:portrait) { font-size: $font-size-go-portrait; }
    @media screen and (orientation:landscape) { font-size: $font-size-go-landscape; }
    color: appColor( stop );
  }

  .restStop {
    @extend .restGo;
    @media screen and (orientation:portrait) { font-size: $font-size-stop-portrait; }
    @media screen and (orientation:landscape) { font-size: $font-size-stop-landscape; }
  }

  .restLoaded {
    @extend .restStop;
    color: appColor( getready );
  }

  .restGetReady {
    @extend .restStop;
    color: appColor( getready );
  }

  .restCompleted {
    @extend .restStop;
    color: appColor( primary );
  }

  .restCountdown {
    @extend .restStop;
    color: $display-disabled;
  }

  #intervalColPortrait {
    @media screen and (orientation:portrait) { display: inherit; }
    @media screen and (orientation:landscape) { display: none; }
  }
  #intervalColLandscape {
    @media screen and (orientation:portrait) { display: none; }
    @media screen and (orientation:landscape) { display: inherit; }
  }

  .intervalGo {
    font-family: selawk;
    @media screen and (orientation:portrait) { font-size: $font-size-interval-portrait; }
    @media screen and (orientation:landscape) { font-size: $font-size-interval-landscape; }
    color: appColor( go );
  }

  .intervalGetReady, .intervalLoaded{
    @extend .intervalGo;
    color: appColor( getready );
  }

  .intervalStop {
    @extend .intervalGo;
    color: appColor( stop );
  }

  .intervalCountdown {
    @extend .intervalGo;
    color: $display-disabled;
  }

  .intervalCompleted {
    @extend .intervalGo;
    color: appColor( primary );
  }

  .timeGo {
    font-family: selawk;
    @media screen and (orientation:portrait) { font-size: $font-size-time-portrait; }
    @media screen and (orientation:landscape) { font-size: $font-size-time-landscape; }
    color: appColor( go );
  }

  .timeGetReady, .timeLoaded, .timeCountdown{
    @extend .timeGo;
    color: appColor( getready );
  }

  .timeStop {
    @extend .timeGo;
    color: appColor( stop );
  }

  .timeCompleted {
    @extend .timeGo;
    color: appColor( primary );
  }
}
