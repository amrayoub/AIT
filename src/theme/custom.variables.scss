// !!!map-fetch came from ionic.functions.scss!!!

// Fetch nested keys
// @param {Map} $map - Map
// @param {Arglist} $keys - Keys to fetch
// @return {*}
// --------------------------------------------------

@function map-fetch($map, $keys...) {
  @each $key in $keys {
    $map: map-get($map, $key);
  }

  @return $map;
}

// !!!color came from ionic.functions.scss!!!

// Fetch map color value
// @param {Map} $map - Map
// @param {String} $color-name - Color name to get
// @param {String} $color-key - Color key (optional), default base
// @return {Color}
// --------------------------------------------------

@function color($map, $color-name, $color-key:null) {
  // Get the value from $color-name in the map
  // this can be of type color or a map
  $color-value: map-get($map, $color-name);

  // If we were given a map we need to grab the value
  // of the key that is passed or the base key
  @if(type-of($color-value) == map) {
    @if($color-key) {
      $color-value: map-fetch($map, $color-name, $color-key);
    } @else {
      $color-value: map-fetch($map, $color-name, base);
    }
  }

  // If the value is a color then return the value
  // otherwise we need to error with the name
  @if (type-of($color-value) == color) {
    @return $color-value;
  }
  @return color-error($color-value, $color-name);
}

// !!!color-error came from ionic.functions.scss!!!

// Color Functions
// --------------------------------------------------

@function color-error($color-value, $color-name: null) {
  $error-msg: "err";

  // If there was a name passed it means the value doesn't exist
  // so error that the value isn't defined
  @if ($color-name) {
    $error-msg: "err";
  }

  @error $error-msg;

  @return null;
}

@function theme-get-map($accent, $base) {
  $colors: map-merge($accent, $base);

  $primary: color($colors, primary);
  $light: color($colors, light);
  $strongest: color($colors, strongest);
  $strong: color($colors, strong);
  $weak: color($colors, weak);
  $weakest: color($colors, weakest);
  $go: color($colors, go);

  @return (
    strongest: $strongest,
    strong: $strong,
    weak: $weak,
    weakest: $weakest,
    background-color: $strongest,
    side-background: $weak,
    side-toolbar-background: $strong,
    button-ios-background-color: $weakest,
    button-md-background-color: $weakest,
    button-wp-background-color: $weakest,
    home-icon-fill: $primary,
    // used on home page for the (rest) interval icon, to differeniate the two types.
    home-icon-fill-light: lighten($primary, 30%),
    // when the countdown is attached to the beginning of a sequence, dim the display.
    display-disabled: transparentize(lighten($go, 10%), .8),
    toggle-ios-handle-background-color-off: $light,
    toggle-md-handle-background-color-off: $light,
    toggle-wp-handle-background-color-off: $light,
    toolbar-io-background: $strong,
    toolbar-md-background: $strong,
    toolbar-wp-background: $strong,
    //toolbar-io-title-text-color: color-contrast($colors, $strong),
    //toolbar-md-title-text-color: color-contrast($colors, $strong),
    //toolbar-wp-title-text-color: color-contrast($colors, $strong),
    // ion-item
    list-background-color: $weak,
    item-ios-divider-background: $strong,
    item-md-divider-background: $strong,
    item-wp-divider-background: $strong
  );
}
